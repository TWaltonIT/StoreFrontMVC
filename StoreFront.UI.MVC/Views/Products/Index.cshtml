@model IEnumerable<StoreFront.DATA.EF.Models.Product>

@{
    ViewData["Title"] = "Products";
}

@* <h1>Index</h1> *@

<section class="product_section layout_padding">
    <div class="single-product-slider">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-6 text-center">
                    <div class="section-title">
                        <h1>Our Products</h1>
                    </div>
                </div>
            </div>
        </div>
        <p align="center">
            @if (User.IsInRole("Admin"))
            {
                <span>
                    <a asp-action="Create" class="btn btn-success">Create New Product</a>
                </span>
            }
            <a asp-action="TiledProducts" class="btn btn-primary mx-4">Tile View</a>            
        </p>
    </div>
</section>

<section class="product_section pb-4 pt-4 mb-4">
    <table class="table table-hover table-striped">
        <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductImage)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductDescription)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ItemsInStock)
                    </th>
                @if (User.IsInRole("Admin"))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.ItemsOnOrder)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsDiscontinued)
                    </th>
                }
                    
                
                    <th>
                        @Html.DisplayNameFor(model => model.Category)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Nature)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductStatus)
                    </th>
                @if (User.IsInRole("Admin"))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Supplier)
                    </th>
                }
                    <th></th>
                </tr>
            </thead>
            <tbody>

            @foreach (var item in Model) 
            {
                <tr>
                    <td>
                        <img src="~/img/t_@item.ProductImage" class="img-fluid" alt="@item.ProductName" />
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.ProductId">
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemsInStock)
                    </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemsOnOrder)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsDiscontinued)
                    </td>
                }
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.CategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nature.NatureName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductStatus.ProductStatusName)
                    </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Supplier.SupplierName)
                    </td>
                
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |

                        @if (item.OrderProducts.Count() == 0)//item.OrderProducts retrieves any related records for the Product
                        {
                            <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                        }
                        else
                        {
                            <a disabled="true" class="text-danger" style="text-decoration: line-through;" title="Can't delete - referenced by other records">Delete</a>
                        }
                        </td>
                }
                    </tr>
            }
        </tbody>
    </table>
</section>
@section scripts {
    <script>
        $(document).ready(function () {
            //Update the selector to target the element with the table class
            $('.table').DataTable();
        });</script>
}